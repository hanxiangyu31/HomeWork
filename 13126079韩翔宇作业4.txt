My Understanding of Formal Methods and Model Checking
Huang Li (13126082)

Formal Methods are fault avoidance techniques in computer science that help in the reduction of errors particularly at the earlier stages of design. They are also mathematical techniques used to model complex systems as mathematical entities. By building a mathematically rigorous model of a complex system, it is possible to verify the system properties in a more thorough ways than empirical testing, but at the cost of an increased learning curve. In software engineering and hardware engineering, the use of formal methods for software and hardware design is motivated by the expectation that, as in other engineering disciplines, performing appropriate mathematical analysis can contribute to the reliability and robustness of a design.

Model Checking is a technique for automatically verifying correctness properties of finite-state concurrent systems such as sequential circuit designs and communication protocols. It is automatic and usually quite fast. Model checking is also recognized as the algorithmic analysis of programs to prove properties of their executions. It traces its roots to logic and theorem proving, both to provide the conceptual framework in which to formalize the fundamental questions and to provide algorithmic procedures for the analysis of logical questions. The main challenge in model checking is dealing with the state space explosion problem. This problem occurs in systems with many components that can interact with each other or systems with data structures that can assume many different values.